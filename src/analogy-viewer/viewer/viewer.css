.viewer {
  font: 12px/1.4 var(--monospace-font);
  position: relative;
}

.viewer-yaml {
  background: white;
  border-radius: 5px;

  border: 1px solid rgba(0, 0, 0, 0.1);
  padding: 10px 10px;

  min-width: 400px;
  width: fit-content;
  height: fit-content;

  line-height: 1.75em;

  border-radius: 5px;
  border: 1px solid #f3edd9;
  box-shadow: 0 0 14px 0 rgba(0, 0, 0, 0.06);

  background-position: 0px 0.84em;
  background-image: repeating-linear-gradient(
    to bottom,
    #f1eddb,
    #f1eddb 0.75px,
    #fffdf2 0.75px,
    #fffdf2 1.75em
  );
}

.viewer-ui {
  display: flex;
  width: fit-content;
  height: fit-content;

  margin-bottom: 20px;
  position: sticky;
  top: 10px;
  z-index: 5;

  padding: 0px;
  border-radius: 5px;
  overflow: hidden;
}

.v-array {
  /* gap: 5px !important; */
}

.viewer-ui > svg {
  height: 350px;

  > *:first-child {
    > #BACKGROUND {
    }

    > *:not(#BACKGROUND) {
      opacity: 0;
      filter: saturate(0);
      transition: 0.2s;

      &.highlight,
      &.pinned {
        opacity: 1;
      }
    }
  }
}

.v-obj-value {
  margin-left: 10px;
  position: relative;
}

.v-obj-entry.is-single-line {
  display: flex;

  > .v-obj-value {
    margin-left: 0px;
  }
}

.v-obj {
  position: relative;
}

.v-string-type {
  color: rgb(201, 80, 19);
}

.v-obj,
.v-array,
.v-string,
.v-obj-value,
.v-obj-key,
.v-array-entry {
  display: flex;
  width: fit-content;
}

.v-string {
  cursor: pointer;
  white-space: pre;
  padding: 0px 3px;
  border-radius: 3px;
  transition: 0.2s;
  color: black;
  color: #2476d3;

  &.highlight {
    opacity: 1;
    background: #9393933b;

    color: black !important;

    * {
      color: black !important;
    }
  }

  &.pinned {
    opacity: 1;
    background: #7fb3f73b;
    color: #002160 !important;

    * {
      color: #002160 !important;
    }

    background: #d8eaff;
    box-shadow: 0 2px 7.1px 0 rgba(0, 0, 0, 0.07),
      0 0 10.9px 0 rgba(0, 0, 0, 0.08), 0 0px 0px 1px #c1def2;
  }
}

.v-string.v-relation {
  color: #24920f;
}

.v-string.v-key {
  &::after {
    content: ":";
    color: rgb(104, 104, 104);
  }
}

.v-array > * {
  &::before {
    content: "-";
    margin-right: 5px;
    color: rgb(104, 104, 104);
  }
}

.v-obj-key {
  display: flex;
}

.v-string:not(.matched) {
  opacity: 0.7;
  cursor: default;
}
