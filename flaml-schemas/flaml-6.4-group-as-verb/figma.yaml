# components?
- pages:
    group foreach:
      - /layers:
          subsets:
            - /frames
            - /shapes
            - /text # TODO: components
      - /layers:
          groups foreach:
            - /properties

      - /frames:
          mapto:
            - (action) /navigate-prototype:
                update: /frames.in-prototype.current subset> /frames
                directions: /prototype-links
            # - (action) /prototype-actions:
            #     subset:

      - (action) create-layer:
          create: /layers
      - (action) delete-layer:
          delete: /layers

      # - collaborators: # TODO: maybe there's a standard user type? kind of cheating maybe
      #     group foreach:
      #       - /cursor
      #       - /cursor->pages->points # TODO: connect with standard gui. Maybe inherits from mouse?
      #       - (action) /move-cursor:
      #           update: pages/canvas affects> /cursor

      - (2D) /canvas:
          affects: /points #, active_users/cursor
          covers: /layers

      - (gui) /canvas-view:
          /marks.points: /points
          # /marks.icons: collaborators/cursor
          /marks.regions: /layers
          /marks.hitboxes:
            - (action) select-layer:
                update: /layers.selected subset> /layers
            - (action) move-layer:
                update: /canvas cover> /layers.selected
                directions: /canvas
          /encoding.canvas: /canvas # could do z-order based on breadth-first-ordering of layers

      - (digraph) /prototype-links:
          affects: /frames.in-prototype

      - (gui) prototype-canvas-view:
          /marks.points: /points
          /marks.regions:
            - /layers
            - move-layer
          # /marks.icons: collaborators/cursor
          /encoding.canvas: /canvas
          /encoding.arrows: /prototype-links

      - (gui) prototype-window:
          /marks:
            - /frames.in-prototype.current
            - /frames.in-prototype.current->/layers
            - /frames.in-prototype.current->/navigate-prototype
          /encoding.canvas: canvas

      - (tree) /layer-hierarchy:
          affects: /layers
          # /parents =: /frames
          # /leaves =: /shapes and /text
          /depth-first-search-order:
            affects: /layers
          /depth-order:
            affects: /layers

      - (gui) /layer-panel:
          /marks.text:
            - /layers
            - select-layer
            - (action) reorder-layers:
                update: /layer-hierarchy affects> /layers
          /encoding.vstack: /layer-hierarchy/depth-first-search-order
          /encoding.hoffset: /layer-hierarchy/depth-order

      - (gui) /inspector-panel:
          /marks: /layers.selected/properties
          /encoding.vstack: (linear) property-order

# - (gui) canvas-view =: pages.active/canvas-view
# - (gui) inspector-view =: pages.active/inspector-panel

- (action) change-page:
    update: pages.active subset> pages

- (gui) pages-view:
    /marks: pages, change-page
    /encoding.vstack:
      (linear) page-order: # huge action candidate
        affects: pages
#
# - $notes:
#     - I wrote all of the spec for a single page, and now I want to make a bunch of pages.
#       - verdict. Yep, you can just kind of wrap it easily. You don't even need to prefix everything with /, you can just use ->
#       - so maybe the / is not even necessary...
